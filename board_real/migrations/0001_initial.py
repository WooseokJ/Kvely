# Generated by Django 3.2 on 2022-01-27 13:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('member', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('board_id', models.AutoField(db_column='board_id', primary_key=True, serialize=False)),
                ('board_title', models.CharField(db_column='board_title', max_length=50)),
                ('board_content', models.TextField(db_column='board_content')),
                ('board_reg_date', models.DateTimeField(auto_now_add=True, db_column='board_reg_date')),
                ('board_mod_date', models.DateTimeField(auto_now=True, db_column='board_mod_date', null=True)),
                ('board_deleted', models.CharField(db_column='board_deleted', default='N', max_length=1)),
                ('board_like_cnt', models.PositiveIntegerField(db_column='board_like_cnt', default=0)),
                ('board_dis_cnt', models.PositiveIntegerField(db_column='board_dis_cnt', default=0)),
                ('temp_YN', models.CharField(db_column='temp_YN', max_length=1)),
                ('view_cnt', models.PositiveIntegerField(db_column='view_cnt', default=0)),
            ],
            options={
                'db_table': 'board',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('reply_id', models.AutoField(db_column='reply_id', primary_key=True, serialize=False)),
                ('reply_content', models.CharField(db_column='reply_content', max_length=200)),
                ('reg_date', models.DateTimeField(auto_now=True, db_column='reg_date')),
                ('mod_date', models.DateTimeField(auto_now=True, db_column='mod_date')),
                ('reply_deleted', models.CharField(db_column='reply_deleted', max_length=1)),
                ('reply_like_cnt', models.PositiveIntegerField(db_column='reply_like_cnt', default=0)),
                ('reply_dis_cnt', models.PositiveIntegerField(db_column='reply_dis_cnt', default=0)),
                ('board', models.ForeignKey(db_column='board_id', on_delete=django.db.models.deletion.CASCADE, to='board_real.board')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='member.user')),
            ],
            options={
                'db_table': 'reply',
            },
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('search_log_id', models.AutoField(db_column='search_log_id', primary_key=True, serialize=False)),
                ('search_keyword', models.TextField(max_length=50)),
                ('reg_date', models.DateTimeField(auto_now_add=True, db_column='reg_date')),
            ],
            options={
                'db_table': 'search_log',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='ReplyBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_date', models.DateTimeField(auto_now_add=True, db_column='reg_date')),
                ('use_YN', models.CharField(default='Y', max_length=1)),
                ('reply', models.ForeignKey(db_column='reply_id', on_delete=django.db.models.deletion.CASCADE, to='board_real.reply')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='member.user')),
            ],
            options={
                'db_table': 'reply_bookmark',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('file_id', models.AutoField(db_column='file_id', primary_key=True, serialize=False)),
                ('file_name', models.FileField(db_column='fine_name', upload_to='uploads/')),
                ('file_reg_date', models.DateTimeField(auto_now_add=True, db_column='file_reg_date')),
                ('file_mod_date', models.DateTimeField(auto_now=True, db_column='file_mod_date')),
                ('file_deleted', models.CharField(default='N', max_length=1)),
                ('board', models.ForeignKey(db_column='board_id', on_delete=django.db.models.deletion.CASCADE, to='board_real.board')),
            ],
            options={
                'db_table': 'file',
            },
        ),
        migrations.CreateModel(
            name='BoardBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_date', models.DateTimeField(auto_now_add=True, db_column='reg_date')),
                ('use_YN', models.CharField(default='Y', max_length=1)),
                ('board', models.ForeignKey(db_column='board_id', on_delete=django.db.models.deletion.CASCADE, to='board_real.board')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='member.user')),
            ],
            options={
                'db_table': 'board_bookmark',
            },
        ),
        migrations.AddField(
            model_name='board',
            name='category',
            field=models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, to='board_real.category'),
        ),
        migrations.AddField(
            model_name='board',
            name='tags',
            field=models.ManyToManyField(blank=True, to='board_real.Tag'),
        ),
        migrations.AddField(
            model_name='board',
            name='user',
            field=models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='member.user'),
        ),
        migrations.AddField(
            model_name='board',
            name='user_like',
            field=models.ManyToManyField(related_name='like_relations', to='member.User'),
        ),
        migrations.AddField(
            model_name='board',
            name='user_report',
            field=models.ManyToManyField(related_name='report_relations', to='member.User'),
        ),
    ]
